@use "../../Utils/variables";

.modaleOpenned {
    width: 90%;
    height: 90%;
    max-height: 90vh;
    overflow: scroll;
    background-color: white;
    position: fixed;
    top:50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 1;
    transition: 0.5s;
    border: 5px solid variables.$color1;
    border-radius: 20px;
    z-index: 14;

    @media(min-width: 768px) {
        width: 700px;
        height: 560px;
    }
}

.modaleClosed { 
    width: 0;
    height: 0;
    transition: 0.5s;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
}

.cross {
    height: 3px;
    width: 35px;
    background-color: variables.$color1;
    display: block;
border-radius: 5px;
}

.cross1 {
    position: absolute; 
top: 50%;
left: 50%;
    transform: translateX(-50%) translateY(-50%) rotate(45deg);
}

.cross2 {
    position: absolute; 
    top: 50%;
    left: 50%;
    transform:translateX(-50%) translateY(-50%) rotate(-45deg);
}

.Toclose {
    border: 1px solid variables.$color1;
    position: absolute;
    right: 20px;
    top: 16px;
    width: 35px;
    height:35px;
    cursor: pointer;
}

.Name {
    position: relative;
    top: 10px;
    left: 20px;
    height: 48px;
    font-style: italic;
    width: 70%;
    display: flex;
    align-items: center;
    justify-content: center;

    &.Dark {
        color: variables.$color1;
    }

    @media(min-width: 425px) {
        left: 0;
        margin: auto;
    }
}

.Photo {

    width:0;
    height: 0;

    & img {
        width: 0;
        height: 0;
    }

    @media(min-width: 768px){
    position: relative;
    top: 10px;
    left: 50%;
    margin-top: 5px;
    border: solid 1px variables.$color1;
    transform: translateX(-50%);
    width: 100px;
    height: 100px;
    border-radius: 10px;
    overflow: hidden;

    & img {
        width: 100%;
        height: 100%;
    }}
}

.flexyDescr {
    display: flex;
    flex-direction: column;
    position: relative;
    top: 15px;
    font-size: 14px;
    gap: 15px;
    margin: 5px;
    opacity: 0;
   

    & .flexy {
        display: flex;
        flex-direction: column;


    }

    & .flexyCode {

        &.Dark {
            color: variables.$color1;
        }
        @media(min-width: 768px) {
            width: 60%;
            margin: auto;
        }}

    & a {
        text-decoration: none;
        color: variables.$color1;
        font-weight: 600;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    & .descr {
        text-align: justify;

        &.Dark {
            color: black;
            & h4 {
                color: variables.$color1;
            }
        }
        & h4 {
            text-align: center;
         
        }
    }

    @media(min-width: 425px) {
        width: 85%;
        margin: auto;
    }

}
.flexycomp {
display: flex;
flex-direction: column;
position: relative;
bottom: 5px;
font-size: 14px;
gap: 5px;
left: 50%;
width: 70%;
transform: translateX(-50%);


}

.comp {
    display: flex;
    flex-direction: column;
}

.compFlex {
    display: flex;
    justify-content: space-between;
    width: 100%;

    & h5 {
        flex: 2;
        color: variables.$color1;
    }

    & div {
        flex: 3;
    }
}

.modaleActive {
    position: fixed;
    z-index: 13;
    left:0;
    top:0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.6);
}

.modaleInactive {
    width: 0;
    height: 0;
    position: relative;
}

.toBecomeFlex {
    @media(min-width: 1150px) {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
    }
}

.h4 {
    &.Dark {
        color: variables.$color1;
    }
}